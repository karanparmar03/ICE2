# ----------------------------------------------------------------------- #
#
# 1. docker-compose -p comp3095-microservices-ecommerce -f docker-compose.yml up -d
#
# 2. docker-compose -p comp3095-microservices-ecommerce -f docker-compose.yml up -d --build
# 2 - Forces a rebuild of all container images
#
# ----------------------------------------------------------------------- #

version: '3.9'

services:

  api-gateway:
    image: api-gateway
    ports:
      - "9000:9000"
    build:
      context: ./api-gateway
      dockerfile: ./Dockerfile
    container_name: api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - product-service
      - order-service
      - inventory-service
    networks:
      - spring

  order-service:
    image: order-service
    ports:
      - "8082:8082"
    build:
      context: ./order-service
      dockerfile: ./Dockerfile
    container_name: order-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres-order
    networks:
      - spring

  inventory-service:
    image: inventory-service
    ports:
      - "8083:8083"
    build:
      context: ./inventory-service
      dockerfile: ./Dockerfile
    container_name: inventory-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres-inventory
    networks:
      - spring

  product-service:
    image: product-service
    ports:
      - "8084:8084"
    build:
      context: ./product-service
      dockerfile: ./Dockerfile
    container_name: product-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongo
    networks:
      - spring

  keycloak:
    container_name: keycloak
    hostname: keycloak
    image: quay.io/keycloak/keycloak:24.0.1
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres-keycloak
      DB_DATABASE: keycloak
      DB_USER: admin
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      ROOT_LOGLEVEL: DEBUG
      JBOSS_LOG_MANAGER_ROOT_LOGGER: DEBUG, stdout, FILE
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import
    depends_on:
      - postgres-keycloak
    networks:
      - spring

  postgres-keycloak:
    image: postgres
    ports:
      - "5485:5485"
    container_name: postgres-keycloak
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - PGDATA=/data/postgres
    volumes:
      - ./data/postgres/keycloak:/var/lib/postgresql/data
    networks:
      - spring

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    container_name: mongo
    volumes:
      - ./data/mongo/products:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    command: mongod --auth
    networks:
      - spring

  postgres-order:
    image: postgres
    ports:
      - "5434:5432"
    container_name: postgres-order
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
    volumes:
      - ./data/postgres/order:/var/lib/postgresql/data
      - ./init/postgres/order/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - spring

  postgres-inventory:
    image: postgres
    ports:
      - "5469:5469"
    container_name: postgres-inventory
    environment:
      - PGPORT=5469
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=inventory-service
    volumes:
      - ./data/postgres/inventory:/var/lib/postgresql/data
      - ./init/postgres/inventory/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - spring

  pgadmin:
          image: dpage/pgadmin4:latest
          container_name: pgadmin
          environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com  # Default login email
            PGADMIN_DEFAULT_PASSWORD: admin         # Default login password
          ports:
            - "5050:80"                             # Map pgAdmin port 80 to host port 5050
          depends_on:
            - postgres-keycloak
            - postgres-order
            - postgres-inventory
          networks:
            - spring



volumes:
  mongo:
    driver: local
  postgres-order:
    driver: local
  postgres-inventory:
    driver: local

networks:
  spring:
    driver: bridge